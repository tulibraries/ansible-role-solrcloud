---

- name: SolrCloud | Get Zip file Releases for Given Solr ConfigSets
  get_url:
    url: "{{ item.value.url }}"
    dest: "{{ solr_collections_config_tmp_dir }}/{{ item.key }}.zip"
    owner: "{{ solr_user }}"
    group: "{{ solr_group }}"
  with_dict: "{{ solr_collections }}"
  run_once: true

- name: SolrCloud | Upload SolrCloud ConfigSets
  uri:
    url: "{{ solr_url }}/admin/configs?action=UPLOAD&name={{ item.key }}"
    method: POST
    src: "{{ solr_collections_config_tmp_dir }}/{{ item.key }}.zip"
    remote_src: true
    headers:
      Content-Type: "application/octet-stream"
  with_dict: "{{ solr_collections }}"
  run_once: true
  tags:
    - skip_ansible_lint

- name: SolrCloud | Return existing SolrCloud Collections
  uri:
    url: "{{ solr_url }}/admin/collections?action=LIST"
    return_content: true
  register: existing_collections
  run_once: true
  changed_when: false

- name: SolrCloud | Create new collections
  uri:
    url: "{{ solr_url }}/admin/collections?action=CREATE&name={{ item }}&numShards={{ solr_collections[item].shards }}&replicationFactor={{ solr_collections[item].replicas }}&collection.configName={{ item }}&maxShardsPerNode={{ solr_collections[item].shards_per_node }}"   # noqa 204
  with_items: "{{ solr_collections.keys() | difference(existing_collections.json.collections) }}"
  run_once: true

- name: SolrCloud | Modify existing collections
  uri:
    url: "{{ solr_url }}/admin/collections?action=MODIFYCOLLECTION&collection={{ item }}&replicationFactor={{ solr_collections[item].replicas }}&maxShardsPerNode={{ solr_collections[item].shards_per_node }}&autoAddReplicas=true"   # noqa 204
  with_items: "{{ existing_collections.json.collections | intersect(solr_collections.keys()) }}"
  run_once: true

- name: SolrCloud | Reload modified collections
  uri:
    url: "{{ solr_url }}/admin/collections?action=RELOAD&name={{ item }}"
  with_items: "{{ existing_collections.json.collections | intersect(solr_collections.keys()) }}"
  run_once: true

- name: SolrCloud | Delete collections that exists in SolrCloud but not in given configuration
  uri:
    url: "{{ solr_url }}/admin/collections?action=DELETE&name={{ item }}"
  with_items: "{{ existing_collections.json.collections | difference(solr_collections.keys()) }}"
  run_once: true

- name: SolrCloud | Return existing SolrCloud Aliases
  uri:
    url: "{{ solr_url }}/admin/collections?action=LISTALIASES"
    return_content: true
  register: existing_aliases
  changed_when: false
  run_once: true

- name: SolrCloud | Create or update aliases
  uri:
    url: "{{ solr_url }}/admin/collections?action=CREATEALIAS&name={{ item }}&collections={{ item.value.collection }}"   # noqa 204
  with_items: "{{ solr_aliases }}"
  run_once: true

- name: SolrCloud | Delete aliases that exists in SolrCloud but not in given configuration
  uri:
    url: "{{ solr_url }}/admin/collections?action=DELETEALIAS&name={{ item }}"
  with_items: "{{ existing_aliases.json.collections | difference(solr_aliases.keys()) }}"
  run_once: true
