---
# tasks file for SolrCloud
# installation instructions taken from: https://cwiki.apache.org/confluence/display/solr/Taking+Solr+to+Production
- name: SolrCloud | Installing required libs
  ansible.builtin.package:
    name: "{{ solr_required_libs }}"
    state: present
    update_cache: true
  until: solr_installed_required_libs is succeeded
  register: solr_installed_required_libs

- name: SolrCloud | Ensure solr group
  ansible.builtin.group:
    name: "{{ solr_group }}"

- name: SolrCloud | Ensure solr user
  ansible.builtin.user:
    name: "{{ solr_user }}"
    group: "{{ solr_group }}"
    home: "{{ solr_installation_dir }}"
    createhome: false

- name: SolrCloud | Ensure system open file soft limits for solr user are high enough
  community.general.pam_limits:
    domain: solr
    limit_type: soft
    limit_item: nofile
    value: "66000"

- name: SolrCloud | Ensure system open file hard limits for solr user are high enough
  community.general.pam_limits:
    domain: solr
    limit_type: hard
    limit_item: nofile
    value: "666000"

- name: SolrCloud | Ensure system process soft limits for solr user are high enough
  community.general.pam_limits:
    domain: solr
    limit_type: soft
    limit_item: nproc
    value: "66000"

- name: SolrCloud | Ensure system process hard limits for solr user are high enough
  community.general.pam_limits:
    domain: solr
    limit_type: soft
    limit_item: nproc
    value: "666000"

- name: SolrCloud | Ensure solr dirs exists
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ solr_user }}"
    group: "{{ solr_group }}"
    mode: "0755"
  with_items:
    - "{{ solr_log_dir }}"
    - "{{ solr_data_dir }}"
    - "{{ solr_jetty_log_dir }}"
    - "{{ solr_installation_path }}"

- name: SolrCloud | Check if Solr has been installed already.
  ansible.builtin.stat:
    path: "{{ solr_installation_path }}/{{ solr_cloud_build_name }}"
  register: solr_installation_path_status

- name: SolrCloud | Download SolrCloud binaries
  ansible.builtin.get_url:
    url: "{{ solr_cloud_url }}"
    dest: "{{ solr_workspace }}/{{ solr_cloud_package }}"
  when: solr_installation_path_path_status.stat.isdir is not defined
  register: solr_download_status

- name: SolrCloud | Put install_solr_service.sh override into the working directory.
  ansible.builtin.copy:
    src: install_solr_service.sh
    dest: /{{ solr_workspace }}/install_solr_service.sh
    mode: "0755"

- name: SolrCloud | Ensure service wrapper is installed for RHEL 9+.
  ansible.builtin.package:
    name:
      - initscripts-service
      - chkconfig
    state: present
  when:
    - ansible_os_family == 'RedHat'
    - ansible_distribution_version.split(".")[0] >= '9'

- name: SolrCloud | Ensure service wrapper is installed for RHEL 7 & 8.
  ansible.builtin.package:
    name:
      - initscripts
      - chkconfig
    state: present
  when:
    - ansible_os_family == 'RedHat'
    - ansible_distribution_version.split(".")[0] <= '8'

- name: SolrCloud | Check if service is running and Check version
  ansible.builtin.command: service solr status
  ignore_errors: true
  register: service_solrcloud_status
  tags:
    - skip_ansible_lint

- name: Solr_status
  ansible.builtin.debug:
    var: service_solrcloud_status

- name: SolrCloud | Expand Solr.
  ansible.builtin.unarchive:
    src: "{{ solr_workspace }}/{{ solr_cloud_package }}"
    dest: "{{ solr_workspace }}"
    copy: false

- name: SolrCloud | Execute SolrCloud installation script
  ansible.builtin.shell: "{{ solr_workspace }}/install_solr_service.sh {{ solr_workspace }}/{{ solr_cloud_package }} -i {{ solr_installation_path }} -d {{ solr_home }} -u {{ solr_user }} -s {{ solr_service_name }} -p {{ solr_port }} -f"
  register: solr_installation_status
  when: |
      service_solrcloud_status.rc > 0 or
      service_solrcloud_status is success and
         solr_version not in service_solrcloud_status.stdout
  tags:
    - skip_ansible_lint

- name: SolrCloud | check solr installation status
  ansible.builtin.debug:
    var: solr_installation_status

# Workaround for bug https://github.com/ansible/ansible-modules-core/issues/915.
- name: SolrCloud | Stop solr service
  ansible.builtin.service: service {{ solr_service_name }} stop
  failed_when: false
  when:
    - ansible_os_family == 'RedHat'
    - ansible_distribution_version.split(".")[0] >= '7'
    - solr_installation_status.changed

- name: SolrCloud | Copy solr.service
  ansible.builtin.copy:
    src: solr.service
    dest: /etc/systemd/system/solr.service
  when: |
      ansible_service_mgr == "systemd"

- name: Run systemd daemon_reload (RHEL 7+ workaround).
  ansible.builtin.systemd:
    name: solr
    daemon_reload: true
  when:
    - ansible_os_family == 'RedHat'
    - ansible_distribution_version.split(".")[0] >= '7'
    - solr_installation_status.changed
